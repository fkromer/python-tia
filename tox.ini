[tox]
envlist = pytest, mypy, pylint, bandit, pyt, check, radon, docs, dist
skip_missing_interpreters = true
skipsdist = true

[testenv]
deps =
    pipenv
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/tia
    PIPENV_IGNORE_VIRTUALENVS = 1
commands =
    pipenv run python -V  # for debugging
    pipenv install --dev --ignore-pipfile  # install dev deps only, do not override Pipfile.lock

[testenv:pytest]
description = 'Run Python only dependency tests with pytest test runner.'
commands =
    pipenv run pytest --ignore=tests --cov-report term-missing --cov=tia tests

[testenv:mypy]
description = 'Execute static analysis with mypy (type annotations).'
commands =
    pipenv run mypy --config-file mypy.ini -p tia

[testenv:pylint]
description = 'Execute static analysis with pylint.'
commands =
    pipenv run pylint --rcfile=.pylintrc -f colorized tia

[testenv:bandit]
description = 'Execute static analysis with bandit (security vulnerabilities).'
commands =
    pipenv run bandit -c bandit.yaml -r tia

[testenv:pyt]
description = 'Execute static analysis with pyt aka python-taint (security vulnerabilities).'
commands =
    pipenv run pyt -a Every -r tia

[testenv:check]
description = 'Check for security vulnerabilities and PEP508 requirements.'
commands =
    pipenv check

[testenv:radon]
description = 'Executes static analysis with radon (metrics).'
commands =
    pipenv run radon mi tia

[testenv:docs]
description = 'Build html documentation.'
commands =
    pipenv run sphinx-build -b html docs/ docs/_build/html

[testenv:dist]
description = 'Executes check and builds sdist and wheel (universal) distribution.' 
commands =
    python setup.py check -ms  # reST complient long string meta-data is irrelevant
    python setup.py sdist bdist_wheel --universal

[testenv:test-release]
description = 'Release package to PyPi test repository (test.pypi.org).'
skip_install = true
deps = twine
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
commands =
    {[testenv:dist]commands}
    twine upload --config-file .pypirc --skip-existing -r testpypi dist/*

[testenv:release]
description = 'Release package to PyPi repository (pypi.org).'
deps = twine
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
commands =
    {[testenv:dist]commands}
    twine upload --config-file .pypirc --skip-existing dist/*
